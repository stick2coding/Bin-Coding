(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{419:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"jvm参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm参数"}},[a._v("#")]),a._v(" JVM参数")]),a._v(" "),s("h3",{attrs:{id:"最大小堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最大小堆"}},[a._v("#")]),a._v(" 最大小堆")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-Xms<heap size>[unit]\n")])])]),s("ol",[s("li",[a._v("默认值为物理内存的1/64")]),a._v(" "),s("li",[a._v("一般小于1G")]),a._v(" "),s("li",[a._v("当空余堆内存不足40%时，JVM会自动增大直到最大堆限制")])]),a._v(" "),s("h3",{attrs:{id:"最大堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最大堆"}},[a._v("#")]),a._v(" 最大堆")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-Xmx<heap size>[unit]\n")])])]),s("ol",[s("li",[a._v("默认值为物理内存的1/4")]),a._v(" "),s("li",[a._v("一般小于1G")]),a._v(" "),s("li",[a._v("当空余堆内存超过70%时，JVM会自动减少直到最小堆限制")])]),a._v(" "),s("h3",{attrs:{id:"新生代大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新生代大小"}},[a._v("#")]),a._v(" 新生代大小")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-Xmn\n")])])]),s("ol",[s("li",[a._v("新生代大小一般为整个堆的3/8")])]),a._v(" "),s("h3",{attrs:{id:"新老年代比例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新老年代比例"}},[a._v("#")]),a._v(" 新老年代比例")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-XX:NewRatio=1\n")])])]),s("ol",[s("li",[a._v("GC调优策略要尽可能将对象留在新生代")]),a._v(" "),s("li",[a._v("该值一般不需要设置")])]),a._v(" "),s("h3",{attrs:{id:"元空间大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元空间大小"}},[a._v("#")]),a._v(" 元空间大小")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("XX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MetaspaceSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("N")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//设置 Metaspace 的初始（和最小大小）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("XX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MaxMetaspaceSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("N")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//设置 Metaspace 的最大大小，如果不指定大小的话，随着更多类的创建，虚拟机会耗尽所有可用的系统内存。")]),a._v("\n")])])]),s("h2",{attrs:{id:"调优策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调优策略"}},[a._v("#")]),a._v(" 调优策略")]),a._v(" "),s("h3",{attrs:{id:"最大堆和最小堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最大堆和最小堆"}},[a._v("#")]),a._v(" 最大堆和最小堆")]),a._v(" "),s("ol",[s("li",[a._v("一般情况，最大堆和最小堆配置一样")]),a._v(" "),s("li",[a._v("避免垃圾回收之后重新分隔堆区造成资源浪费")])]),a._v(" "),s("h3",{attrs:{id:"新生代和老年代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新生代和老年代"}},[a._v("#")]),a._v(" 新生代和老年代")]),a._v(" "),s("ol",[s("li",[a._v("调整新生代和老年代的比率")]),a._v(" "),s("li",[a._v("如果最大堆和最小堆一样，且设置了新生代后，不需要设置该比值")]),a._v(" "),s("li",[a._v("官方推荐新生代占堆的3/8")])]),a._v(" "),s("h3",{attrs:{id:"线程栈空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程栈空间"}},[a._v("#")]),a._v(" 线程栈空间")]),a._v(" "),s("ol",[s("li",[a._v("相同物理内存下，减少栈空间可以生成更多的线程")]),a._v(" "),s("li",[a._v("一般操作系统同一个进程生成的线程数为3000-5000左右")])]),a._v(" "),s("h3",{attrs:{id:"幸存代和eden区比值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幸存代和eden区比值"}},[a._v("#")]),a._v(" 幸存代和Eden区比值")]),a._v(" "),s("ol",[s("li",[a._v("一般为 E:S0:S1=8:1:1")])]),a._v(" "),s("h2",{attrs:{id:"垃圾回收器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收器"}},[a._v("#")]),a._v(" 垃圾回收器")]),a._v(" "),s("h3",{attrs:{id:"垃圾回收器具体选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收器具体选择"}},[a._v("#")]),a._v(" 垃圾回收器具体选择")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-XX:+UseSerialGC\n-XX:+UseParallelGC\n-XX:+UseParNewGC\n-XX:+UseG1GC\n\n")])])]),s("h3",{attrs:{id:"gc记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gc记录"}},[a._v("#")]),a._v(" GC记录")]),a._v(" "),s("p",[a._v("输出GC活动日志")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-XX:+UseGCLogFileRotation \n-XX:NumberOfGCLogFiles=< number of log files > \n-XX:GCLogFileSize=< file size >[ unit ]\n-Xloggc:/path/to/gc.log\n\n")])])]),s("h2",{attrs:{id:"引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[a._v("#")]),a._v(" 引用")]),a._v(" "),s("blockquote",[s("p",[a._v("https://blog.csdn.net/qq_41692766/article/details/106223390")])])])}),[],!1,null,null,null);s.default=r.exports}}]);